name: Deploy dbt docs to preview Vercel env

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - main

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [
          1/12,  2/12,  3/12,  4/12,
          5/12,  6/12,  7/12,  8/12,
          9/12, 10/12, 11/12, 12/12,
        ]
    timeout-minutes: 30
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dbt packages
        run: pip install dbt-postgres
      - name: Setup CloudQuery
        uses: cloudquery/setup-cloudquery@v3
        with:
          version: v5.0.1
      - name: Generate the docs
        run: make shard=${{ matrix.shard }} gen-site
        env:
          CQ_DSN: postgresql://postgres:pass@localhost:5432/postgres
      - uses: actions/upload-artifact@v4
        with:
          name: docs-artifact
          path: dbt-docs-site/*.html
  deploy:
    needs: generate-docs
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-artifact
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --no-wait --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
