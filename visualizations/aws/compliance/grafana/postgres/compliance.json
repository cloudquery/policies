{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 9,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 11,
        "panels": [],
        "title": "CloudQuery",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "description": "This panel will show OK if the aws_resources view has been created and is accessible to the current Postgres user. See https://github.com/cloudquery/cloudquery/tree/main/plugins/source/aws/dashboards for more information.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byFrameRefID",
                "options": "A"
              },
              "properties": [
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "0": {
                          "index": 1,
                          "text": "Not OK"
                        },
                        "1": {
                          "index": 0,
                          "text": "OK"
                        }
                      },
                      "type": "value"
                    }
                  ]
                },
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "red",
                        "value": null
                      },
                      {
                        "color": "green",
                        "value": 1
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 0,
          "y": 1
        },
        "id": 13,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRESQL}"
            },
            "editorMode": "code",
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT count(*) FROM information_schema.views\n     WHERE table_name   = '${frameworks}'",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "provisioned_throughput_in_mibps"
                  ],
                  "type": "column"
                }
              ]
            ],
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "aws_efs_filesystems",
            "timeColumn": "creation_time",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Data Source",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "description": "Time since the most recent CloudQuery fetch happened.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "dateTimeFromNow"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 8,
          "y": 1
        },
        "id": 16,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/^Time$/",
            "values": false
          },
          "text": {},
          "textMode": "value"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRESQL}"
            },
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "select _cq_sync_time as time, 1 from aws_resources order by _cq_sync_time desc limit 1;",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "provisioned_throughput_in_mibps"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "aws_efs_filesystems",
            "timeColumn": "creation_time",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Last Fetch",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "description": "Time since the most recent policy execution happened.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "dateTimeFromNow"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 8,
          "x": 16,
          "y": 1
        },
        "id": 15,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "/^Time$/",
            "values": false
          },
          "text": {},
          "textMode": "value"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRESQL}"
            },
            "editorMode": "code",
            "format": "time_series",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "select policy_execution_time as time, 1 from \"${frameworks}\" order by policy_execution_time desc limit 1;",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "provisioned_throughput_in_mibps"
                  ],
                  "type": "column"
                }
              ]
            ],
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "aws_efs_filesystems",
            "timeColumn": "creation_time",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Last Policy Execution",
        "type": "stat"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 3
        },
        "id": 9,
        "panels": [],
        "title": "Results",
        "type": "row"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": []
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "pass"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "green",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "fail"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "red",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 10,
          "w": 8,
          "x": 0,
          "y": 4
        },
        "id": 5,
        "options": {
          "displayLabels": [
            "percent"
          ],
          "legend": {
            "displayMode": "list",
            "placement": "right",
            "showLegend": true,
            "values": []
          },
          "pieType": "donut",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRESQL}"
            },
            "editorMode": "code",
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "\nSELECT \n-- execution_time as time,\ncount(case when status = 'fail' then 1 else null end) as fail,\ncount(case when status = 'pass' then 1 else null end) as pass\n\nFROM \"${frameworks}\" where account_id in (${account_id}) \n\n--select\n  -- execution_time as time,\n--  framework,\n--  count(case when status = 'fail' then 1 else null end) as fail,\n  -- count(*)\n--  count(case when status = 'pass' then 1 else null end) as pass\n--from aws_policy_results where account_id in (${account_id}) and framework in (${framework}) group by framework;",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "threshold"
                  ],
                  "type": "column"
                }
              ]
            ],
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "aws_cloudwatch_alarms",
            "timeColumn": "configuration_updated_timestamp",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Policy Pass/Fail Distribution",
        "transformations": [],
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "red",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 10,
          "w": 8,
          "x": 8,
          "y": 4
        },
        "id": 6,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRESQL}"
            },
            "editorMode": "code",
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "\nSELECT \n-- execution_time as time,\ncount(case when status = 'fail' then 1 else null end) as fail\n\nFROM \"${frameworks}\" where account_id in (${account_id}) ",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "threshold"
                  ],
                  "type": "column"
                }
              ]
            ],
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "aws_cloudwatch_alarms",
            "timeColumn": "configuration_updated_timestamp",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Failed Checks",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "green",
              "mode": "fixed"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 10,
          "w": 8,
          "x": 16,
          "y": 4
        },
        "id": 7,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRESQL}"
            },
            "editorMode": "code",
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "\nSELECT \n-- execution_time as time,\ncount(case when status = 'pass' then 1 else null end) as pass\n \nFROM \"${frameworks}\" where account_id in (${account_id}) ",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "threshold"
                  ],
                  "type": "column"
                }
              ]
            ],
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "aws_cloudwatch_alarms",
            "timeColumn": "configuration_updated_timestamp",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Passed Checks",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "description": "All policies, benchmarks results.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "resource_id"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 563
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "title"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 462
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 12,
          "w": 24,
          "x": 0,
          "y": 14
        },
        "id": 2,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "status"
            }
          ]
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRESQL}"
            },
            "editorMode": "code",
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "select * from \"${frameworks}\" \nwhere account_id in (${account_id}) and status in (${status}) ;\n",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "threshold"
                  ],
                  "type": "column"
                }
              ]
            ],
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "aws_cloudwatch_alarms",
            "timeColumn": "configuration_updated_timestamp",
            "timeColumnType": "timestamp",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Policy Results",
        "type": "table"
      }
    ],
    "refresh": "",
    "schemaVersion": 38,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "definition": "select distinct account_id from \"${frameworks}\"",
          "description": "",
          "hide": 0,
          "includeAll": true,
          "multi": true,
          "name": "account_id",
          "options": [],
          "query": "select distinct account_id from \"${frameworks}\"",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 3,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "definition": "select distinct status from \"${frameworks}\"",
          "hide": 0,
          "includeAll": true,
          "multi": true,
          "name": "status",
          "options": [],
          "query": "select distinct status from \"${frameworks}\"",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": "CQPostgres",
            "value": "CQPostgres"
          },
          "hide": 0,
          "includeAll": false,
          "label": "Postgres Datasource",
          "multi": false,
          "name": "DS_POSTGRESQL",
          "options": [],
          "query": "postgres",
          "queryValue": "",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "type": "datasource"
        },
        {
          "current": {
            "selected": false,
            "text": "aws_compliance__cis_v1.2.0_free",
            "value": "aws_compliance__cis_v1.2.0_free"
          },
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
            "definition": " select table_name from INFORMATION_SCHEMA.views WHERE table_schema = ANY (current_schemas(false)) \nAND table_name LIKE 'aws_compliance_%'\nAND table_name != 'aws_compliance__log_metric_filter_and_alarm'\nAND table_name NOT LIKE 'aws_compliance__security_group%'\nAND table_name NOT LIKE 'aws_compliance__network%'\nAND table_name NOT LIKE 'aws_compliance__api%'",
        "hide": 0,
        "includeAll": false,
        "label": "Compliance Frameworks",
        "multi": false,
        "name": "frameworks",
        "options": [],
        "query": " select table_name from INFORMATION_SCHEMA.views WHERE table_schema = ANY (current_schemas(false)) \nAND table_name LIKE 'aws_compliance_%'\nAND table_name != 'aws_compliance__log_metric_filter_and_alarm'\nAND table_name NOT LIKE 'aws_compliance__security_group%'\nAND table_name NOT LIKE 'aws_compliance__network%'\nAND table_name NOT LIKE 'aws_compliance__api%'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "AWS Compliance CSPM Dashboard",
    "uid": "awscompliance",
    "version": 23,
    "weekStart": ""
  }
